@page "/events/detail/{EventId:int}"
@rendermode InteractiveServer
@attribute [Authorize]

@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Authorization
@using System.ComponentModel.DataAnnotations
@using EventTrackingVer2.Models
@using Radzen
@using Radzen.Blazor
@using EventTrackingVer2.Components.Pages.Guest

@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject EventTrackingVer2.Data.ApplicationDbContext DbContext

<h2 class="mb-4 text-center">Event Details</h2>

<EditForm Model="eventDetail" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-2">
        <label>Event Name:</label>
        <InputText class="form-control" @bind-Value="eventDetail.EventName" />
    </div>

    <div class="form-group mb-2">
        <label>Organizer:</label>
        <InputText class="form-control" @bind-Value="eventDetail.Organizer" />
    </div>

    <div class="form-group mb-2">
        <label>Location:</label>
        <InputText class="form-control" @bind-Value="eventDetail.Location" />
    </div>

    <div class="form-group mb-2">
        <label>Start Time:</label>
        <InputDate class="form-control" @bind-Value="eventDetail.StartTime" />
    </div>

    <div class="form-group mb-2">
        <label>End Time:</label>
        <InputDate class="form-control" @bind-Value="eventDetail.EndTime" />
    </div>

    <div class="form-group mb-2">
        <label>Number of Participants:</label>
        <InputNumber class="form-control" @bind-Value="eventDetail.NumberOfParticipants" />
    </div>

    <br />

    <GuestList Guests="@GuestList"
               OnUpdateGuest="UpdateGuestAsync" />


    <button type="submit" class="btn btn-success mt-3">Save Changes</button>
</EditForm>
@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-3">@message</div>
}